var dedris={"a":["ཀ","\"","ཁ","ག","ང","ཅ","�","ཆ","ཇ","ཉ","ཏ","ཐ","་","ད","ན","པ","ཕ","བ","མ","ཙ","ཚ","ཛ","ཝ","ཞ","ཟ","འ","ཡ","ར","ལ","ཤ","ས","ཧ","ཨ","ཊ","ཋ","ཌ","ཎ","ཥ","ཀྱ","ཁྱ","གྱ","པྱ","ཕྱ","བྱ","མྱ","ཀྲ","ཁྲ","གྲ","ཏྲ","ཐྲ","དྲ","པྲ","ཕྲ","བྲ","མྲ","ཤྲ","སྲ","ཧྲ","ཀླ","གླ","བླ","ཟླ","རླ","`","སླ","རྐ","རྒ","རྔ","རྗ","རྙ","རྟ","རྡ","རྣ","རྦ","རྨ","རྩ","རྫ","རྐྱ","རྒྱ","རྨྱ","ལྐ","ལྒ","ལྔ","ལྕ","ལྗ","ལྟ","ལྡ","ལྤ","ལྦ","ལྷ","སྐ","སྒ","སྔ","སྙ"],"b":["སྟ","\"","སྡ","སྣ","སྤ","སྦ","'","སྨ","སྩ","སྐྱ","སྒྱ","སྤྱ","-","སྦྱ","སྨྱ","སྐྲ","སྒྲ","སྣྲ","སྤྲ","སྦྲ","སྨྲ","ཀྭ","ཁྭ","གྭ","གྲྭ","རྒྭ","ཉྭ","ཏྭ","སྟྭ","ཊྭ","དྭ","དྲྭ","ཕྱྭ","ཙྭ","རྩྭ","ཚྭ","ཞྭ","ཟྭ","རྭ","ལྭ","ཤྭ","སྭ","ཧྭ","ཀྐ","ཀྐྲ","ཀྑ","ཀྒ","ཀྒྷ","ཀྔ","ཀྟ","ཀྟྭ","ཀྟྱ","ཀྟྲ","ཀྚ","ཀྠ","ཀྛ","ཀྡ","ཀྡྲ","ཀྞ","ཀྤ","ཀྤྲ","ཀྦ","ཀྨ","`","ཀྩ","ཀྫྙ","ཀྴ","ཀྴྱ","ཀྵ","ཀྵྐྵ","ཀྵྜ","ཀྵྞ","ཀྵྨ","ཀྵྭ","ཀྵྱ","ཀྵྲ","ཀྵླ","ཀྶ","ཀྷ","ཁྑ","ཁྣ","ཁླ","ཁྷ","གྒ","གྔ","གྔྷ","གྟ","གྟྱ","གྡ","གྡྷ","གྣ","གྣྱ","གྞ","གྦ"],"c":["གྦྱ","\"","གྦྷ","གྨ","གྩ","གྫ","'","གྻ","གྲྱ","གྴ","གྴྭ","གྷ","-","གྷྒྷ","གྷྣ","གྷྣྱ","གྷྭ","གྷྱ","གྷྲ","གྷླ","ངྐ","ངྐྟ","ངྐྟྲ","ངྐྱ","ངྐྲ","ངྑ","ངྒ","ངྒྱ","ངྒླ","ངྒྷ","ངྒྷྲ","ངྔྷ","ངྔྷྱ","ངྟ","ངྻ","ངྴ","ངྵ","ངྶ","ངྷ","ངྷྣ","ངྷྣྱ","ངྷྭ","ངྷྱ","ངྷྲ","ཅྭ","ཉྠ","ཉྩ","ཉྪ","ཉྫ","ཉྫྙ","ཏྐ","ཏྐྲ","ཏྑ","ཏྒ","ཏྒྲ","ཏྟ","ཏྟྭ","ཏྟྱ","ཏྟྲ","ཏྠ","ཏྠྱ","ཏྡྷ","ཏྣ","`","ཏྤ","ཏྤྠ","ཏྤྣ","ཏྤྲ","ཏྤྷ","ཏྥ","ཏྦྷ","ཏྨ","ཏྨྱ","ཏྨྲ","ཏྪ","ཏྫ","ཏྱ","ཏྻ","ཏྲྟྲ","ཏྲྱ","ཏྵ","ཏྶ","ཏྶྣ","ཏྶྭ","ཏྷ","ཊྐ","ཊྒ","ཊྒྲ","ཊྚ","ཊྚྱ","ཊྠ","ཊྡ","ཊྣ","ཊྤ"],"d":["ཊྥ","\"","ཊྦྷ","ཊྨ","ཊྱ","ཊྲ","'","ཊྵ","ཊྶ","ཐྭ","ཐྱ","ཐླྷ","-","ཋྐ","ཋྱ","ཋྲ","དྑ","དྒ","དྒྷ","དྒྷྲ","དྔ","དྟ","དྠ","དྡ","དྡྲ","དྡྷ","དྡྷྭ","དྡྷྱ","དྡྷྲ","དྤ","དྤྲ","དྦ","དྦྲ","དྦྷ","དྦྷྱ","དྦྷྲ","དྨ","དྭྱ","དྺ","དྱ","དྲྱ","དྶ","དྷ","དྷྣ","དྷྣྱ","དྷྨ","དྷྭ","དྷྱ","དྷྲ","ཌྒ","ཌྒྷ","ཌྒྲ","ཌྡྷ","ཌྜ","ཌྜྷ","ཌྦྷ","ཌྨ","ཌྱ","ཌྷ","ཌྷྱ","ཌྷྲ","ནྐ","ནྟ","`","ནྟྭ","ནྟྱ","ནྟྲ","ནྚ","ནྠ","ནྡ","ནྡྟ","ནྡྭ","ནྡྱ","ནྡྲ","ནྡྷ","ནྡྷྱ","ནྡྷྲ","ནྜ","ནྣ","ནྤ","ནྥ","ནྦྷ","ནྨ","ནྩ","ནྫ","ནྭ","ནྱ","ནྻ","ནྲ","ནླ","ནྴ","ནྶ","ནྷ","ཎྔ"],"e":["ཎྔྟ","\"","ཎྟ","ཎྟྲ","ཎྚ","ཎྛ","'","ཎྡ","ཎྡྟ","ཎྡྡྷ","ཎྡྭ","ཎྡྱ","-","ཎྡྲ","ཎྡྷ","ཎྜ","ཎྞ","ཎྨ","ཎྱ","ཎྻ","ཎྲ","ཎྵ","པྐྲ","པྔྷ","པྟ","པྠ","པྡ","པྡྷ","པྣ","པྤ","པྥ","པྨ","པྫ","པྻ","པླ","པྴ","པྶ","པྷ","ཕྥ","བྐ","བྟ","བྠ","བྡ","བྡྷ","བྥ","བྦྷ","བྦྷྱ","བྨ","བྫ","བྻ","བྷ","བྷྨ","བྷྱ","བྷྻ","བྷྲ","མྒྷ","མྟ","མྣ","མྞ","མྤ","མྤྱ","མྤྲ","མྥ","`","མྦ","མྦྲ","མྦླ","མྦྷ","མྦྷྱ","མྦྷྲ","མྨ","མྨྲ","མྺ","མླ","མྴ","མྶ","ཙྐ","ཙྩ","ཙྪ","ཙྪྭ","ཙྪྱ","ཙྪྲ","ཙྱ","ཙྻ","ཙྲ","ཙྴ","ཚྪ","ཛྙ","ཛྙྱ","ཛྨ","ཛྫ","ཛྫྙ","ཛྫྷ","ཛྭ"],"f":["ཛྱ","\"","ཛྲ","ཛྷ","ཛྷྱ","ཝྱ","'","ཝྲ","འྭ","ཡྦ","ཡྻ","ཡྶ","-","རྐྐ","རྐྟ","རྐྲ","རྐྴ","རྐྴྱ","རྐྵ","རྐྵྱ","རྑ","རྒྒ","རྒྦྷ","རྒྵ","རྒྱྭ","རྒྲ","རྒྷ","རྒྷྱ","རྔྷ","རྔྷྱ","རྟྟ","རྟྤྣྱ","རྟྨ","རྟྱ","རྟྲ","རྟྶྣྱ","རྚ","རྠ","རྠྱ","རྡྭ","རྡྡ","རྡྡྷ","རྡྨ","རྡྱ","རྡྲ","རྡྷ","རྡྷྭ","རྡྷྲ","རྜ","རྜྷྲ","རྣྡྲ","རྣྭ","རྞ","རྞྞ","རྞྱ","རྤྱ","རྥ","རྦྟ","རྦྤ","རྦྦ","རྦྦྷ","རྦྦྷྱ","རྦྱ","`","རྦྲ","རྦྷ","རྦྷྱ","རྦྷྲ","རྨྨ","རྩྩ","རྩྪ","རྫྙ","རྫྫ","རྫྭ","རྫྲ","རྫྷ","རྵྱ","རྷ","ཪྟ","ཪྠ","ཪྡ","ཪྣྲ","ཪྞ","ཪྞྜ","ཪྞྞ","ཪྤ","ཪྤྤ","ཪྤྲ","ཪྥ","ཪྦ","ཪྦྟ","ཪྦྷ","ཪྨ","ཪྪ"],"g":["ཪྺ","\"","ཪྱ","ཪྻ","ཪྻྻ","ཪྴ","'","ཪྴྣ","ཪྴྞ","ཪྴྨ","ཪྴྭ","ཪྴྱ","-","ཪྵ","ཪྵྨ","ཪྶ","ལྤྱ","ལྥ","ལྦྷ","ལྨ","ལྱ","ལྱྭ","ལྻ","ལླ","ལྷྭ","ཤྟ","ཤྚ","ཤྣ","ཤྞ","ཤྨ","ཤྩ","ཤྩྱ","ཤྪ","ཤྱ","ཤྻ","ཤླ","ཤྴ","ཥྐ","ཥྐྲ","ཥྟ","ཥྚ","ཥྚྭ","ཥྚྱ","ཥྚྲ","ཥྠ","ཥྛ","ཥྞ","ཥྤ","ཥྤྱ","ཥྤྲ","ཥྦ","ཥྨ","ཥྩ","ཥྩྱ","ཥྭ","ཥྱ","ཥླ","ཥྵ","ཥྶ","སྑ","སྗ","སྟྱ","སྟྲ","`","སྟྲྱ","སྠ","སྥ","སྦྷ","སྫ","སྱ","སྻ","སྴ","སྵ","སྶ","ཧྟ","ཧྣ","ཧྞ","ཧྥ","ཧྨ","ཧྨྱ","ཧྱ","ཧྱྭ","ཧྻ","ཧླ","ཧྶ","ཨྱ","ཨྸ","x","y","z","{","|","}","~"],"vowa":["༄༅","\"","༄༅༅","༅","ྃ","ྃ","'","ཾ","ཾ","༁ྃ","ྂ","།","་","༑","༴","༠","༡","༢","༣","༤","༥","༦","༧","༨","༩","ཿ","༔","ཨོཾ","ཨཱཿ","ཧཱུྃ","༈","྅","ི","ི","ི","ིཾ","ིཾ","ྀ","ྀ","ྀཾ","ྀཾ","ེ","ེ","ེཾ","ེཾ","ཻ","ཻ","ཻཾ","ཻཾ","ོ","ོ","ོཾ","ོཾ","ོྃ","ཽ","ཽ","ཽཾ","ཽཾ","ཀ྄","ག྄","ཏ྄","ད྄","ཌ྄","`","བ྄","མ྄","ཙ྄","ཛ྄","ར྄","ས྄","ཆྒཻ","྄","྄","ྈ","ྉ","ྈྐ","ྈྑ","ྉྤ","ྉྥ","�","འུྃ","ཧཱུྂ","ཨྠ","ཨྠྀི","ྊྃ","ལྙྃ","༵","༵","༷","༷","","༧","}","~"],"syma":["*","\"","�","�","%","&","'","༼","༽","ངྔ","ངླ","ངྼ","-","ཀྒླཱ","/","ཋྚ","ཊྛ","ཌྛ","རྟྟྨ","མླྭ","ཀྐླཱ","ཀྐཱུ","_","_","_","{","}","(","=",")","?","","ལྼ","ལྼཱ","ཨྭ","ཐྐ","མྷ","ལྲ","ཀྼ","ཁྼ","གྼ","«","»","༏","[","]","©","","","","","གྷྒྟ","","","ཉྐ","ཤྦ","Y","Z","༼","\\","༽","^","_","`","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","༼","|","༽",""]}
function  parse  (s) {
	s = s.split('<w:body>')[1]
	
	;var xf  =  new  RegExp('w:hAnsi="([^"]*)"')
	
	;var x  =  new  RegExp('<w:p>|<w:p/>|<w:p +[^>]*>','g')
	;var fonts  =  []
	s = s .split (x)
	
	;var x  =  new  RegExp('<w:rFonts [^>]*>', 'g')
	 for(var i = 0; i < s.length; i++){
		;var p  =  []
		;var m  =  s[i].match(x)
		;var t  =  s[i] .split(x)
		if(m) {
			for (var j  =  0; j < t.length; j++) {
				t[j] = t[j].replace(/<[^>]*>/g,'')
				t[j] = t[j].replace(/&lt;/g, '<')
				t[j] = t[j].replace(/&gt;/g, '>')
				t[j] = t[j].replace(/&amp;/g, '&')
				t[j] = t[j].replace(/&apos;/g, "'")
				t[j] = t[j].replace(/&quot;/g, '"')
				if(t[j].length > 0) {
					if (j > 0) p .push(convertByFont(t[j], m[j-1]))
					else  p .push({f:-1, c:t[j]})
				}
			}
		}
		s[i] = p
	}

	return  {fonts:fonts, text:s}
	function  convertByFont (a,b,c) {
		;var m  =  xf.exec(b)
		;var f  =  fonts .indexOf (m[1])
		if (f < 0) f = fonts.length, fonts .push (m[1])
		return  {f:f, c:a}
	}
}

if (typeof  (module )!= 'undefined') module.exports.parse = parse // node
else  docxParse = parse // browser global

var V  =  ['', 'ུ','ཱ','ཱུ']

function  convertStringWithFont    (s,fontTable,vowel) {
	;var R  =  ''
	if (vowel == undefined) vowel = ''
	 for(var i = 0; i < s.length; i++){
		;var C  =  fontTable[(s .charCodeAt (i)) - 33]
		if (C) R += C + vowel
		else  R += ' '
	}
	return  R
}

function  fontIdFromName (a,b,c) {
	a = a.toLowerCase()
	if (a .indexOf ('ededris-' )== 0 || a .indexOf ('dedris-' )== 0) {
		a = (a .split ('-'))[1]
		;var name  =  ''  ;var num  =  ''
		 for(var i = 0; i < a.length; i++)if (a[i] >= '0' && a[i] <= '9') num += a[i]; else  name += a[i]
		if (num == '') num = '0'
		return  { f:name, v:V[parseInt(num)] }
	}
}

function  convert  (doc) {
	;var F  =  doc.fonts
	;var PAR  =  doc.text
	a = ''
	 for(var r = 0; r < PAR.length; r++){
		;var P  =  PAR[r]
		a += '<p>'
		 for(var p = 0; p < P.length; p++){
			;var f  =  fontIdFromName(F[P[p].f])
			;var s  =  P[p].c
			if (f) {
				a += convertStringWithFont(s, dedris[f.f], f.v)
			} else  a += s
		}
		a += '\n'
	}
	return  a
}


if (typeof  (module )!= 'undefined') module.exports.convert = convert //node
else  sambodhaConvert=convert // browser

